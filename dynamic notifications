blueprint:
  name: Notification avancée avec actions et suppression
  description: "Envoie une notification en fonction de la présence ou de la proximité, avec boutons interactifs et suppression automatique."
  domain: automation
  input:
    mode_declenchement:
      name: Mode de déclenchement
      description: "Choisir si la notification est déclenchée par la présence ou la proximité."
      selector:
        select:
          options:
            - "Présence"
            - "Proximité"
    capteur_presence:
      name: Capteur de présence
      description: "Choisir le capteur de présence (binary_sensor ou person)."
      selector:
        entity:
          multiple: false
          domain:
            - binary_sensor
            - person
      required: false
    distance_max:
      name: Distance max (si mode Proximité)
      description: "Distance en km en dessous de laquelle la notification est envoyée."
      selector:
        number:
          min: 1
          max: 50
          step: 0.1
      required: false
    personne_cible:
      name: Personne suivie (si mode Proximité)
      description: "Sélectionner la personne pour le suivi de proximité."
      selector:
        entity:
          domain: person
      required: false
    message_notification:
      name: Message de la notification
      description: "Le message qui sera envoyé dans la notification."
      selector:
        text:
    ajouter_boutons:
      name: Ajouter des boutons interactifs
      description: "Activer pour inclure des boutons dans la notification."
      selector:
        boolean:
    nom_bouton_1:
      name: Nom du bouton 1
      description: "Texte affiché sur le premier bouton."
      selector:
        text:
      required: false
    action_bouton_1:
      name: Action du bouton 1
      description: "Action à exécuter en appuyant sur le bouton."
      selector:
        action: {}
      required: false
    nom_bouton_2:
      name: Nom du bouton 2
      description: "Texte affiché sur le deuxième bouton."
      selector:
        text:
      required: false
    action_bouton_2:
      name: Action du bouton 2
      description: "Action à exécuter en appuyant sur le bouton."
      selector:
        action: {}
      required: false
    suppression_auto:
      name: Supprimer automatiquement la notification
      description: "Activer pour supprimer la notification quand l'état change."
      selector:
        boolean:
    condition_suppression:
      name: Condition de suppression
      description: "Entité dont l’état doit changer pour déclencher la suppression."
      selector:
        entity: {}
      required: false
    valeur_suppression:
      name: Valeur déclenchant la suppression
      description: "Valeur de l’entité qui déclenchera la suppression de la notification."
      selector:
        text:
      required: false

mode: restart
max_exceeded: silent

variables:
  notification_id: "notif_{{ now().timestamp() | int }}"
  actions_list: >-
    {% if ajouter_boutons %}
    - action: "action_1"
      title: "{{ nom_bouton_1 }}"
    - action: "action_2"
      title: "{{ nom_bouton_2 }}"
    {% else %}
    []
    {% endif %}

trigger:
  - platform: template
    value_template: >
      {% if mode_declenchement == "Présence" %}
        {{ is_state(capteur_presence, "on") }}
      {% elif mode_declenchement == "Proximité" %}
        {{ states[personne_cible].attributes.distance | float < distance_max }}
      {% endif %}

action:
  - service: notify.mobile_app_XXX
    data:
      title: "Notification"
      message: "{{ message_notification }}"
      data:
        notification_id: "{{ notification_id }}"
        actions: "{{ actions_list }}"

  - choose:
      - conditions:
          - "{{ ajouter_boutons }}"
        sequence:
          - wait_for_trigger:
              - platform: event
                event_type: mobile_app_notification_action
                event_data:
                  action: "action_1"
          - "{{ action_bouton_1 }}"
          - wait_for_trigger:
              - platform: event
                event_type: mobile_app_notification_action
                event_data:
                  action: "action_2"
          - "{{ action_bouton_2 }}"

  - choose:
      - conditions:
          - "{{ suppression_auto }}"
        sequence:
          - wait_for_trigger:
              - platform: state
                entity_id: "{{ condition_suppression }}"
                to: "{{ valeur_suppression }}"
          - service: notify.mobile_app_XXX
            data:
              message: "clear_notification"
              data:
                notification_id: "{{ notification_id }}"
